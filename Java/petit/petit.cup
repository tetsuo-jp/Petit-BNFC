// -*- Java -*- This Cup file was machine-generated by BNFC
package petit;

parser code {:
  public petit.Absyn.Program pProgram() throws Exception
  {
	java_cup.runtime.Symbol res = parse();
	return (petit.Absyn.Program) res.value;
  }

public <B,A extends java.util.LinkedList<? super B>> A cons_(B x, A xs) { xs.addFirst(x); return xs; }

public void syntax_error(java_cup.runtime.Symbol cur_token)
{
	report_error("Syntax Error, trying to recover and continue parse...", cur_token);
}

public void unrecovered_syntax_error(java_cup.runtime.Symbol cur_token) throws java.lang.Exception
{
	throw new Exception("Unrecoverable Syntax Error");
}

:}

nonterminal petit.Absyn.Program Program;
nonterminal petit.Absyn.ListStm ListStm;
nonterminal petit.Absyn.Stm Stm;
nonterminal petit.Absyn.Exp Exp;

terminal _SYMB_0;    //   ;
terminal _SYMB_1;    //   :=
terminal _SYMB_2;    //   0
terminal _SYMB_3;    //   do
terminal _SYMB_4;    //   end
terminal _SYMB_5;    //   for
terminal _SYMB_6;    //   suc
terminal _SYMB_7;    //   times





terminal String _IDENT_;



start with Program;


Program ::= ListStm:p_1  {: RESULT = new petit.Absyn.PDefs(p_1); :} 
;
ListStm ::=  /* empty */  {: RESULT = new petit.Absyn.ListStm(); :} 
  | Stm:p_1  {: RESULT = new petit.Absyn.ListStm(); RESULT.addLast(p_1); :}
  | Stm:p_1 _SYMB_0 ListStm:p_3  {: RESULT = p_3; p_3.addFirst(p_1); :}
;
Stm ::= _IDENT_:p_1 _SYMB_1 Exp:p_3  {: RESULT = new petit.Absyn.SAss(p_1,p_3); :} 
  | _SYMB_5 Exp:p_2 _SYMB_7 _SYMB_3 Stm:p_5 _SYMB_4  {: RESULT = new petit.Absyn.SFor(p_2,p_5); :}
;
Exp ::= _SYMB_2  {: RESULT = new petit.Absyn.EZer(); :} 
  | _SYMB_6 Exp:p_2  {: RESULT = new petit.Absyn.ESuc(p_2); :}
  | _IDENT_:p_1  {: RESULT = new petit.Absyn.EVar(p_1); :}
;

